import * as queryString from "query-string";
import ReportGenerator from "./report-generator";

class XSSScanner {
  reportGenerator: ReportGenerator;
  vectors: Array<string>;

  constructor() {
    this.reportGenerator = new ReportGenerator();

    let vectorJSON = read("xss-vectors.json");
    this.log(vectorJSON);
    let vectorJSON = fs.readFileSync("xss-vectors.json");
    this.vectors = JSON.parse(vectorJSON.toString()).map((e: any) => e.vector);
  }

  async scan(url: string) {
    let results = await Promise.all(
      this.vectors.map(async (vector) => {
        let result = { vector, status: "" };

        let urlWithVector = queryString.stringifyUrl({
          url: url,
          query: { q: vector },
        });
        let response = await fetch(urlWithVector);
        if (response.status == 200 && response.body?.toString() == vector) {
          result.status = "failed";
        } else {
          result.status = "passed";
        }

        return result;
      })
    );

    this.reportGenerator.record([
      "No. of vectors failed: ",
      results.filter((result) => result.status == "failed").length,
    ]);
  }

  generateReport() {
    return this.reportGenerator.toString();
  }
}

export default XSSScanner;
